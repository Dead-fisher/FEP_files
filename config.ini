# This is the configuration section for prepare_dual_topology.py (which is the only section in this file, but the [ section ] is mandatory)
[prepare_dual_topology]

threads = 36
selection_method=mdanalysis
# Read ligands and topologies from this folder
input_ligands = /home/gridsan/ywang3/Project/Capping/FEP_test/lig_data
buildsys_water = spc216
buildsys_water_mol_name = SOL
buildsys_watershell = 12
buildsys_nname = Cl-
buildsys_pname = Na+

# Read the macromolecule structure from this file
pre_solvated = True
structure = /home/gridsan/ywang3/Project/Capping/FEP_test/mod_system_no_mol.pdb
topology = /home/gridsan/ywang3/Project/Capping/FEP_test/mod_system_no_mol.top
index = /home/gridsan/ywang3/Project/Capping/FEP_test/index.2.ndx
# This is the force field directory, it will be copied to each perturbation dir and used to prepare the MD systems
# extradirs = oplsaam.ff
# Options controlling the core-constrained superimposition
# First select the use of it instead of reading all ligand poses 
pose_loader = generic
poses_input = ["/home/gridsan/ywang3/Project/Capping/FEP_test/lig_data/mol_LNA_A.mol","/home/gridsan/ywang3/Project/Capping/FEP_test/lig_data/mol_m7G_2OME.mol","/home/gridsan/ywang3/Project/Capping/FEP_test/lig_data/mol_m7G_A.mol","/home/gridsan/ywang3/Project/Capping/FEP_test/lig_data/mol_m7G_LNA.mol"]
# If pose_loader = generic, the starting pose for each ligand will be the read pose.
# Use this pose as the reference for the superimposition poses_reference_pose_superimpose = receptor_data/9mv.pdb
mcs_type = 3d
# Name of the output. This will be a self-extracting bash file
perturbations_dir = eif4e_fep
# Sets the path to GROMACS executable in the run node, uncomment and modify if needed. # gmx_bin_run = /usr/local/bin/gromacs
# Options controlling the output, see manual for more info. Uncomment as needed
# FEP legs are to be submitted to a slurm scheduler
#output_scripttype = slurm
# Run these commands at the beginnig of the jog (useful to load modules, importing libs) 
#output_runbefore = module load anaconda/2022a;module load cuda/11.6;source activate PyAutoFEP;source ~/env/pyautofep.env;source $HOME/env/plumed-2.8.1.env;source $HOME/env/gmx-2022.3.env 

# Fine-tune job resources
#output_resources = all_cpus:32;all_gpus:2;all_time: 24
# Use a python file instead of a binary during the collect step
output_collecttype = python